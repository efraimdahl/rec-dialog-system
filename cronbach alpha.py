import numpy as np
from scipy.stats import pearsonr
import matplotlib.pyplot as plt


def cronbach_alpha(items):
    item_scores = np.array(items)
    num_items = item_scores.shape[1]

    total_scores = np.sum(item_scores, axis=1)

    covariance_matrix = np.cov(item_scores, rowvar=False)

    item_variances = np.var(item_scores, axis=0)

    alpha = (num_items / (num_items - 1)) * (1 - (np.sum(item_variances) / np.var(total_scores)))

    return alpha

# each line is the value for one question
survey_data = np.array([
    [3,3,4,3,5,3,4,1,5,4,4,4,3,2,5,3,3],
    [2,1,3,4,4,2,3,2,5,4,4,3,4,2,4,4,2],
    [3,4,3,4,5,4,4,3,5,5,4,4,4,4,3,5,4],
    [2,1,3,4,3,4,4,3,5,5,5,4,5,4,4,4,2],
    [3,2,4,3,4,3,4,2,5,4,3,4,4,3,4,4,4],
    [2,1,4,3,4,2,4,4,5,5,4,3,3,2,4,4,5],
    [3,4,2,3,4,2,3,2,5,5,2,4,4,3,4,4,3],
    [3,2,3,3,4,2,2,2,5,3,3,3,4,3,2,3,2],
    [2,1,4,3,4,3,1,2,5,2,2,4,4,3,1,2,3],
    [1,4,4,3,2,3,1,2,5,4,3,3,3,4,1,2,3],
    [1,1,4,4,4,2,4,2,5,5,3,2,3,2,1,2,3]
])
survey_data_B = np.array([
    [1,1,2,1,5,1,3,4,4,2,4,1,4,2,4,3,2],
    [2,2,1,1,4,1,4,3,4,3,4,2,3,3,4,4,3],
    [4,4,3,3,4,3,5,4,4,3,3,2,4,3,3,5,4],
    [3,1,1,2,4,3,4,4,4,3,4,2,3,4,4,4,3],
    [3,2,3,2,4,3,3,4,4,3,5,2,3,3,3,4,4],
    [3,1,2,1,4,2,4,4,4,5,4,2,4,3,3,3,3],
    [2,2,3,2,3,2,3,2,4,5,3,2,4,3,4,4,3],
    [1,2,2,1,4,1,1,4,4,2,3,2,4,3,1,2,1],
    [2,2,1,1,2,2,1,4,4,2,2,1,4,3,1,1,3],
    [1,2,2,2,2,1,1,3,4,1,2,1,2,3,1,1,3],
    [2,1,3,4,3,1,3,4,4,5,3,1,3,2,1,3,3]
])
print(cronbach_alpha(survey_data.T))
output = []
for i in range(len(survey_data)):
    line = []
    for j in range(len(survey_data)):
        #correlation_coefficient, _ = pearsonr(survey_data[i], survey_data[j])
        # Transform 2 questions' value to calculate the value
        value = cronbach_alpha(survey_data[[i,j]].T)
        #line.append(correlation_coefficient)
        #print(survey_data[[i, j]].T)
        #print(value)
        line.append(value)
    output.append(line)
plt.figure(figsize=(8, 6))
formatted_output = np.array([['{:.2f}'.format(float(item)) if isinstance(item, str) else '{:.2f}'.format(item) for item in row] for row in output])

column_labels = ['Q1','Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10', 'Q11']
row_labels = ['Q1','Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10', 'Q11']
table_title = 'Cronbach Alpha Matrix for all 11 questions'
fig, ax = plt.subplots()
table = plt.table(cellText=formatted_output, loc='center', cellLoc='center', colLabels=column_labels, rowLabels=row_labels)
#table.auto_set_font_size(False)
table.auto_set_font_size(False)
table.set_fontsize(10)
ax.axis('off')
plt.show()
print(formatted_output.tolist())
#print(survey_data[0:2])
#alpha = cronbach_alpha(survey_data)
#print(f"Cronbach's alpha: {alpha}")
import pandas as pd
csv_file = "cronbach_alpha_B.csv"
table = [[1.0, 0.7960029457578485, 0.35045651291117486, 0.6840909231545059, 0.6929861498301267, 0.6933168123211718, 0.48699607654623717, 0.669642857142857, 0.36164847647365284, 0.30335166981067213, 0.33587572106361],
 [0.7960029457578485, 1.0, 0.470049932795482, 0.8050955272183666, 0.6450827038379672, 0.7330018740663183, 0.590705236576487, 0.40070896589170607, 0.2164075752892755, 0.1576939250741925, 0.23318447632722036],
 [0.35045651291117486, 0.470049932795482, 1.0, 0.3597875718720091, 0.3447851413076001, 0.3030903023560533, 0.16804523991415915, 0.10783277320343845, 0.1996674976919165, 0.09969143409242986, 0.2554351053071128],
 [0.6840909231545059, 0.8050955272183666, 0.3597875718720091, 1.0, 0.6798805521327853, 0.7197530808259416, 0.3804593150977575, 0.32260899615570965, 0.3076471991047502, 0.14294606229262652, 0.22441978168289],
 [0.6929861498301267, 0.6450827038379672, 0.3447851413076001, 0.6798805521327853, 1.0, 0.641658814282893, 0.32147078412445623, 0.4420376769680542, 0.37400662077154784, 0.3623487262040612, 0.38289560268197315],
 [0.6933168123211718, 0.7330018740663183, 0.3030903023560533, 0.7197530808259416, 0.641658814282893, 1.0, 0.6424334255469839, 0.4898724967365809, 0.43659857069339353, 0.12472961248890954, 0.553848892303323],
 [0.48699607654623717, 0.590705236576487, 0.16804523991415915, 0.3804593150977575, 0.32147078412445623, 0.6424334255469839, 1.0, 0.22262677784970847, 0.1202322016471676, 0.0, 0.44077853201547174],
 [0.669642857142857, 0.40070896589170607, 0.10783277320343845, 0.32260899615570965, 0.4420376769680542, 0.4898724967365809, 0.22262677784970847, 1.0, 0.6805879900113696, 0.5877180650481594, 0.35102800923189315],
 [0.36164847647365284, 0.2164075752892755, 0.1996674976919165, 0.3076471991047502, 0.37400662077154784, 0.43659857069339353, 0.1202322016471676, 0.6805879900113696, 1.0, 0.7417981870189156, 0.3055050463303892],
 [0.30335166981067213, 0.1576939250741925, 0.09969143409242986, 0.14294606229262652, 0.3623487262040612, 0.12472961248890954, 0.0, 0.5877180650481594, 0.7417981870189156, 1.0, 0.35627764550103425],
 [0.33587572106361, 0.23318447632722036, 0.2554351053071128, 0.22441978168289, 0.38289560268197315, 0.553848892303323, 0.44077853201547174, 0.35102800923189315, 0.3055050463303892, 0.35627764550103425, 1.0]]
table_2 = [['1.00', '0.78', '0.47', '0.45', '0.81', '0.58', '0.65', '0.57', '0.34', '0.04', '0.57'], ['0.78', '1.00', '0.60', '0.86', '0.80', '0.77', '0.64', '0.79', '0.52', '0.12', '0.75'], ['0.47', '0.60', '1.00', '0.50', '0.61', '0.42', '0.74', '0.67', '0.40', '0.49', '0.61'], ['0.45', '0.86', '0.50', '1.00', '0.62', '0.57', '0.36', '0.60', '0.43', '0.30', '0.64'], ['0.81', '0.80', '0.61', '0.62', '1.00', '0.75', '0.69', '0.71', '0.62', '0.18', '0.66'], ['0.58', '0.77', '0.42', '0.57', '0.75', '1.00', '0.36', '0.38', '0.32', '0.04', '0.79'], ['0.65', '0.64', '0.74', '0.36', '0.69', '0.36', '1.00', '0.65', '0.25', '0.35', '0.37'], ['0.57', '0.79', '0.67', '0.60', '0.71', '0.38', '0.65', '1.00', '0.83', '0.56', '0.65'], ['0.34', '0.52', '0.40', '0.43', '0.62', '0.32', '0.25', '0.83', '1.00', '0.69', '0.64'], ['0.04', '0.12', '0.49', '0.30', '0.18', '0.04', '0.35', '0.56', '0.69', '1.00', '0.58'], ['0.57', '0.75', '0.61', '0.64', '0.66', '0.79', '0.37', '0.65', '0.64', '0.58', '1.00']]

df = pd.DataFrame(table_2)
df.to_csv(csv_file, index=False, header=False)